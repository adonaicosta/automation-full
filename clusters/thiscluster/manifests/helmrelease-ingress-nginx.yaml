---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: flux-system
spec:
  chart:
    spec:
      chart: ingress-nginx
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
      version: 4.8.3
  releaseName: ingress-nginx
  dependsOn: 
  - name: monitoring
  install:
    createNamespace: true
    disableWait: false
    remediation:
      retries: -1
  interval: 1m0s
  targetNamespace: ingress-nginx
  storageNamespace: ingress-nginx
  values:
    controller:
      allowSnippetAnnotations: true
      enableAnnotationValidations: true
      config:
        log-format-escape-json: "true"
        log-format-upstream: '{"timestamp": "$time_iso8601", "requestID": "$req_id", "proxyUpstreamName":
        "$proxy_upstream_name", "proxyAlternativeUpstreamName": "$proxy_alternative_upstream_name","upstreamStatus":
        "$upstream_status", "upstreamAddr": "$upstream_addr","httpRequest":{"requestMethod":
        "$request_method", "requestUrl": "$host$request_uri", "status": $status,"requestSize":
        "$request_length", "responseSize": "$upstream_response_length", "userAgent": "$http_user_agent",
        "remoteIp": "$remote_addr", "referer": "$http_referer", "latency": "$upstream_response_time s",
        "protocol":"$server_protocol"}}'

      ingressClassResource:
        name: nginx
        enabled: true
        default: true
        controllerValue: "k8s.io/ingress-nginx"
      ingressClass: nginx



      updateStrategy:
        type: Recreate
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          scrapeInterval: 30s
          additionalLabels:
            release: monitoring
        prometheusRule:
          enabled: true
          additionalLabels:
            release: monitoring
          rules:
            - alert: NGINXConfigFailed
              expr: count(nginx_ingress_controller_config_last_reload_successful == 0) > 0
              for: 1s
              labels:
                severity: critical
              annotations:
                description: bad ingress config - nginx config test failed
                summary: uninstall the latest ingress changes to allow config reloads to resume
            - alert: NGINXCertificateExpiry
              expr: (avg(nginx_ingress_controller_ssl_expire_time_seconds) by (host) - time()) < 604800
              for: 1s
              labels:
                severity: critical
              annotations:
                description: ssl certificate(s) will expire in less then a week
                summary: renew expiring certificates to avoid downtime
            - alert: NGINXTooMany500s
              for: 1m
              expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"5.+"} ) by (host) / sum(nginx_ingress_controller_requests{status=~"2.+"}) by (host) ) > 3
              labels:
                severity: warning
              annotations:
                message: Host - "{{ $labels.host }}"
                description: Too many 5XXs
                summary: More than 3% of all requests returned 5XX, this requires your attention
            - alert: NGINXTooMany400s
              for: 1m
              expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"4.+"} ) by (host) / sum(nginx_ingress_controller_requests{status=~"2.+"}) by (host) ) > 3
              labels:
                severity: warning
              annotations:
                message: Host - "{{ $labels.host }}"
                description: Too many 4XXs
                summary: More than 3% of all requests returned 4XX, this requires your attention
           

      resources:
        requests:
          cpu: 100m
          memory: 200Mi
        limits:
          cpu: 150m
          memory: 350Mi

    defaultBackend:
      enabled: true
      resources:
        requests:
          cpu: 100m
          memory: 90Mi

        limits:
          cpu: 110m
          memory: 100Mi
