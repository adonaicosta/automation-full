apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  annotations:
  name: temporalio-jobs
  namespace: flux-system
spec:
  chart:
    spec:
      chart: templater
      sourceRef:
        kind: HelmRepository
        name: getupcloud
      version: 1.0.0
  install:
    createNamespace: true
    disableWait: false
    remediation:
      retries: -1
  upgrade:
    remediation:
      retries: -1
  interval: 5m
  releaseName: temporalio-jobs
  storageNamespace: temporal
  targetNamespace: temporal
  values:
    templates:
    #- |-
    #  apiVersion: v1
    #  kind: Pod
    #  metadata:
    #    name: "temporal-yhtie-test2"
    #    annotations:
    #      "helm.sh/hook": test
    #      "helm.sh/hook-delete-policy": hook-succeeded
    #  spec:
    #    securityContext:
    #      fsGroup: 1000
    #      runAsUser: 1000
    #    containers:
    #    - name: "temporal-nuftm-test"
    #      image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.3"
    #      imagePullPolicy: "IfNotPresent"
    #      command:
    #        - "sh"
    #        - "-c"
    #        - |
    #          #!/usr/bin/env bash -e
    #          curl --connect-timeout 600  -XGET --fail 'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=600s'
    #    restartPolicy: Never
    - |-
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: temporal-schema-setup2
        labels:
          app.kubernetes.io/name: temporal
          helm.sh/chart: temporal-0.35.0
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/instance: temporal
          app.kubernetes.io/version: 1.22.6
          app.kubernetes.io/component: database
          app.kubernetes.io/part-of: temporal
        annotations:
          "helm.sh/hook": post-install
          "helm.sh/hook-weight": "0"
          "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
      spec:
        backoffLimit: 100
        template:
          metadata:
            name: temporal-schema-setup
            labels:
              app.kubernetes.io/name: temporal
              helm.sh/chart: temporal-0.35.0
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: temporal
              app.kubernetes.io/version: 1.22.6
              app.kubernetes.io/component: database
              app.kubernetes.io/part-of: temporal
          spec:
            
            restartPolicy: "OnFailure"
            initContainers:
              - name: check-cassandra-service
                image: busybox
                command: ['sh', '-c', 'until nslookup temporal-cassandra.temporal.svc.cluster.local; do echo waiting for cassandra service; sleep 1; done;']
              - name: check-cassandra
                image: "cassandra:3.11.3"
                imagePullPolicy: IfNotPresent
                command: ['sh', '-c', 'until cqlsh temporal-cassandra.temporal.svc.cluster.local 9042 -e "SHOW VERSION"; do echo waiting for cassandra to start; sleep 1; done;']
              - name: create-default-store
                image: "temporalio/admin-tools:1.22.4"
                imagePullPolicy: IfNotPresent
                command: ['temporal-cassandra-tool', 'create', '-k', 'temporal', '--replication-factor', '1']
                env:
                  - name: CASSANDRA_HOST
                    value: temporal-cassandra.temporal.svc.cluster.local
                  - name: CASSANDRA_PORT
                    value: "9042"
                  - name: CASSANDRA_KEYSPACE
                    value: temporal
                  - name: CASSANDRA_USER
                    value: user
                  - name: CASSANDRA_PASSWORD
                    value: password
              - name: create-visibility-store
                image: "temporalio/admin-tools:1.22.4"
                imagePullPolicy: IfNotPresent
                command: ['temporal-cassandra-tool', 'create', '-k', 'temporal_visibility', '--replication-factor', '1']
                env:
                  - name: CASSANDRA_HOST
                    value: temporal-cassandra.temporal.svc.cluster.local
                  - name: CASSANDRA_PORT
                    value: "9042"
                  - name: CASSANDRA_KEYSPACE
                    value: temporal_visibility
                  - name: CASSANDRA_USER
                    value: user
                  - name: CASSANDRA_PASSWORD
                    value: password
            containers:
              - name: default-schema
                image: "temporalio/admin-tools:1.22.4"
                imagePullPolicy: IfNotPresent
                command: ['temporal-cassandra-tool', 'setup-schema', '-v', '0.0']
                env:
                  - name: CASSANDRA_HOST
                    value: temporal-cassandra.temporal.svc.cluster.local
                  - name: CASSANDRA_PORT
                    value: "9042"
                  - name: CASSANDRA_KEYSPACE
                    value: temporal
                  - name: CASSANDRA_USER
                    value: user
                  - name: CASSANDRA_PASSWORD
                    value: password
              - name: visibility-schema
                image: "temporalio/admin-tools:1.22.4"
                imagePullPolicy: IfNotPresent
                command: ['temporal-cassandra-tool', 'setup-schema', '-v', '0.0']
                env:
                  - name: CASSANDRA_HOST
                    value: temporal-cassandra.temporal.svc.cluster.local
                  - name: CASSANDRA_PORT
                    value: "9042"
                  - name: CASSANDRA_KEYSPACE
                    value: temporal_visibility
                  - name: CASSANDRA_USER
                    value: user
                  - name: CASSANDRA_PASSWORD
                    value: password
    - |-
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: temporal-schema-update2
        labels:
          app.kubernetes.io/name: temporal
          helm.sh/chart: temporal-0.35.0
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/instance: temporal
          app.kubernetes.io/version: 1.22.6
          app.kubernetes.io/component: database
          app.kubernetes.io/part-of: temporal
        annotations:
          "helm.sh/hook": post-install,pre-upgrade
          "helm.sh/hook-weight": "1"
          "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
      spec:
        backoffLimit: 100
        template:
          metadata:
            name: temporal-schema-update
            labels:
              app.kubernetes.io/name: temporal
              helm.sh/chart: temporal-0.35.0
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: temporal
              app.kubernetes.io/version: 1.22.6
              app.kubernetes.io/component: database
              app.kubernetes.io/part-of: temporal
          spec:
            
            restartPolicy: "OnFailure"
            initContainers:
              - name: check-cassandra-service
                image: busybox
                command: ['sh', '-c', 'until nslookup temporal-cassandra.temporal.svc.cluster.local; do echo waiting for cassandra service; sleep 1; done;']
              - name: check-cassandra
                image: "cassandra:3.11.3"
                imagePullPolicy: IfNotPresent
                command: ['sh', '-c', 'until cqlsh temporal-cassandra.temporal.svc.cluster.local 9042 -e "SHOW VERSION"; do echo waiting for cassandra to start; sleep 1; done;']
            containers:
              - name: default-schema
                image: "temporalio/admin-tools:1.22.4"
                imagePullPolicy: IfNotPresent
                command: ['temporal-cassandra-tool', 'update-schema', '--schema-dir', '/etc/temporal/schema/cassandra/temporal/versioned']
                env:
                  - name: CASSANDRA_HOST
                    value: temporal-cassandra.temporal.svc.cluster.local
                  - name: CASSANDRA_PORT
                    value: "9042"
                  - name: CASSANDRA_KEYSPACE
                    value: temporal
                  - name: CASSANDRA_USER
                    value: user
                  - name: CASSANDRA_PASSWORD
                    value: password
    - |-
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: temporal-es-index-setup2
        labels:
          app.kubernetes.io/name: temporal
          helm.sh/chart: temporal-0.35.0
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/instance: temporal
          app.kubernetes.io/version: 1.22.6
          app.kubernetes.io/component: database
          app.kubernetes.io/part-of: temporal
        annotations:
          "helm.sh/hook": post-install
          "helm.sh/hook-weight": "0"
          "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
      spec:
        backoffLimit: 100
        template:
          metadata:
            name: temporal-es-index-setup
            labels:
              app.kubernetes.io/name: temporal
              helm.sh/chart: temporal-0.35.0
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: temporal
              app.kubernetes.io/version: 1.22.6
              app.kubernetes.io/component: database
              app.kubernetes.io/part-of: temporal
          spec:
            
            restartPolicy: "OnFailure"
            initContainers:
              - name: check-elasticsearch
                image: "temporalio/admin-tools:1.22.4"
                imagePullPolicy: IfNotPresent
                command: ['sh', '-c', 'until curl --connect-timeout 600 --silent --fail http://elasticsearch-master-headless:9200 2>&1 > /dev/null; do echo waiting for elasticsearch to start; sleep 1; done;']
            containers:
              - name: create-elasticsearch-index
                image: "temporalio/admin-tools:1.22.4"
                imagePullPolicy: IfNotPresent
                command: ['sh', '-c']
                args:
                  - 'curl --connect-timeout 600 -X PUT --fail http://elasticsearch-master-headless:9200/_template/temporal_visibility_v1_template -H "Content-Type: application/json" --data-binary "@schema/elasticsearch/visibility/index_template_v7.json" 2>&1 &&
                    curl --connect-timeout 600 -X PUT --fail http://elasticsearch-master-headless:9200/temporal_visibility_v1_dev 2>&1 || true '
      
